---

import { storyblokEditable } from '@storyblok/astro'
import { useStoryblokApi } from '@storyblok/astro'
import { getLangFromUrl, useTranslatedPath } from '../../scripts/utils';

const lang = getLangFromUrl(Astro.url);

const storyblokApi = useStoryblokApi();

let storiesData = [];

const { blok } = Astro.props

if (!blok.Work || blok.Work.length === 0) {
  const { data } = await storyblokApi.get('cdn/stories',
  {
      version: process.env.PUBLIC_ENV !== 'production' ? 'draft' : 'published',
      content_type: 'work',
      language: lang
  });
  storiesData = data.stories;
} else {
  storiesData = blok.Work
}

const posts = storiesData.map(story => {
  return {
    title: story.content.title,
    description: story.content.description,
    image: story.content.image.filename,
    slug: story.full_slug,
  }
})

---

<div {...storyblokEditable(blok)} class="py-20">

    <div class="container mx-auto">

        <h2 class="animate text-lg mb-8 font-[450]">{blok.Title}</h2>

        <ul class={`grid grid-cols-${blok.Columns} gap-8`}>
          {posts.map(post => (
            <li class="flex-1">
              <a href={`/${post.slug}`} class={`py-20 bg-${blok.background}`}>

                { blok.Columns == 3 ? (
                  <>
                    <img src={`${post.image}/m/630x840/smart`} lazy="true" class="rounded-lg aspect-[9/12] object-cover" />
                    <h3 class="animate text-md mt-4">{post.description}</h3> 
                  </>
                ) : (
                  <>
                    <h3 class="animate text-md mb-4">{post.description}</h3>
                    <img src={`${post.image}/m/840x630/smart`} lazy="true" class="rounded-lg aspect-[12/9] object-cover mb-8" />
                  </>
                )}
                
                

              </a>
            </li>
          ))}
        </ul>
        
    </div>

</div>