---

import { storyblokEditable, renderRichText } from '@storyblok/astro'

const { blok } = Astro.props

const renderedRichText = renderRichText(blok.Text)

---


<div {...storyblokEditable(blok)} class="title-block my-36">

    <div class="mx-auto px-[30px] justify-center text-black max-w-screen-2xl">
        
        { blok.Alignment == 1 ? ( 
        <div class="grid grid-cols-6 gap-5">  
            <div class="col-span-2">
                { blok.Button.cached_url ? (
                        <a class="button hollow" href={blok.Button.cached_url}>
                            <span>{blok.Button.title}</span>
                        </a>
                ) : (null)}
            </div>
            <div class="col-span-1">
               <div class="text-sm uppercase">
                    {blok.Subtitle}
               </div>
            </div>
            <div class="col-span-3">
                <h2 class="animate text-xl 2xl:text-xxl max-w-[770px] 2xl:max-w-[900px] font-medium inline-block mb-8">
                    {blok.Title}
                </h2>
                <div class=" prose" set:html={renderedRichText} />
            </div>
            
        </div>
        ) : (
        <div class="grid grid-cols-6 gap-5">
            
            <div class="col-span-4 col-start-2">
               <div class="text-sm uppercase">
                    {blok.Subtitle}
               </div>
                <h2 class="animate text-xl 2xl:text-xxl max-w-[770px] 2xl:max-w-[900px] font-medium inline-block mb-8">
                    {blok.Title}
                </h2>
                <div class=" prose" set:html={renderedRichText} />
                { blok.Button.cache_url ? (
                    <a class="button hollow" href={blok.Button.cached_url}>
                        <span>{blok.Button.title}</span>
                    </a>
                ) : (null)}
            </div>

        </div>
        )}

    </div>

</div> 
